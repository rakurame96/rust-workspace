[workspace]
resolver = "2"

members = [ 
    "ch3/ch3-conditions", "ch3/ch3-constants", "ch3/ch3-datatypes", "ch3/ch3-for", "ch3/ch3-functions", "ch3/ch3-loop-1", "ch3/ch3-shadowing", "ch3/ch3-while",
    "ch4/ch4-4-1", "ch4/ch4-4-3-ownership", "ch4/ch4-4-4-return-values", "ch4/ch4-4-5-return-ownership", "ch4/ch4-4-6-1-mutable-references", "ch4/ch4-4-6-references-borrowing", "ch4/ch4-4-7-slice-type", "ch4/ch4-4-7-1-string-literal-slices", "ch4/ch4-4-7-2-other-slices", 
    "ch5/ch5-5-1-struct-definition", "ch5/ch5-5-3-change-struct-value", "ch5/ch5-5-5-struct-fields-as-args", "ch5/ch5-5-7-struct-update", "ch5/ch5-5-7-1-struct-tuple", "ch5/ch5-5-8-area-rectangle", "ch5/ch5-5-12-dervied-traits", "ch5/ch5-5-13-method-syntax", "ch5/ch5-5-15-struct-method-param", "ch5/ch5-5-16-multiple-impl-block",
    "ch6/ch6-6-1-enum-example", "ch6/ch6-6-3-enum-match", "ch6/ch6-6-4-enum-bind-values", "ch6/ch6-6-5-enum-option-exp", "ch6/ch6-6-6-if-let", 
    "ch7/ch7-1-1-restaurant-lib/restaurant", "ch7/ch7-7-12-use-stmt-rules", "ch7/ch7-7-16-new-names-as-kywd", "ch7/ch7-7-21-split-mod-into-new-files", 
    "ch8/ch8-8-3-vectors", "ch8/ch8-8-4-vector-read-elements", "ch8/ch8-8-6-vector-mut-immut-borrow", "ch8/ch8-8-8-vector-iteration", "ch8/ch8-8-14-string-values", "ch8/ch8-8-16-string-slices", "ch8/ch8-8-18-string-concat", "ch8/ch8-8-20-create-hash-map", "ch8/ch8-8-21-access-hash-map", "ch8/ch8-8-22-hash-map-ownership", "ch8/ch8-8-25-hash-map-value-update", 
    "ch9/ch9-9-1-panic", "ch9/ch9-9-4-error-file-handle", "ch9/ch9-9-5-different-errors", "ch9/ch9-9-5-different-errors-shortand", "ch9/ch9-9-6-propagating-errors", "ch9/ch9-9-7-propagating-errors-another-method", "ch9/ch9-9-8-chaining-methods", "ch9/ch9-9-9-direct-open-file", "ch9/ch9-9-10-usage-in-main", "ch9/ch9-9-12-main-return-type-update", 
    "ch10/ch10-10-1-largest-number", "ch10/ch10-10-2-largest-number-2-lists", "ch10/ch10-10-3-largest-number-fnc", "ch10/ch10-10-4-largest-generic-type", "ch10/ch10-10-5-largest-generic-T-type", "ch10/ch10-10-6-struct-generic-T-type", "ch10/ch10-10-7-struct-generic-T-type-diff-values", "ch10/ch10-10-8-struct-multiple-generic-type", "ch10/ch10-10-9-struct-method-generic-type", "ch10/ch10-10-10-struct-impl-concrete-type", "ch10/ch10-10-11-struct-diff-generic-types", "ch10/ch10-10-13-trait-example", "ch10/ch10-10-14-trait-default-impl", "ch10/ch10-10-14-trait-default-impl-new-methods", "ch10/ch10-10-14-trait-as-parameters", "ch10/ch10-10-14-trait-as-return-type", "ch10/ch10-10-15-trait-bounds", "ch10/ch10-10-16-lifetimes-dangling-references", "ch10/ch10-10-18-lifetimes-valid-references", "ch10/ch10-10-19-generic-lifetimes", "ch10/ch10-10-22-different-concrete-lifetimes", "ch10/ch10-10-23-outofscope-lifetimes", "ch10/ch10-10-24-struct-lifetimes", "ch10/ch10-10-25-lifetime-elision", 
    "ch11/ch11-11-1-test-module-adder", "ch11/ch11-11-5-test-module-rectangle-struct", "ch11/ch11-11-7-add_two", "ch11/ch11-11-7-custom-messages", "ch11/ch11-11-8-should-panic", "ch11/ch11-11-9-panic-macro-usage", "ch11/ch11-11-10-test-function-println", "ch11/ch11-11-11-test-subset-test", "ch11/ch11-11-13-integration-test", "ch11/ch11-11-12-unit-test", 
    "ch13/ch13-1-1-closures-basic", "ch13/ch13-13-2-type-annotations", "ch13/ch13-13-3-closure-different-type", "ch13/ch13-13-4-closure-immutable-reference", "ch13/ch13-13-5-closure-mutable-reference", "ch13/ch13-13-6-closure-thread-spawning", "ch13/ch13-13-7-sort-by-key", "ch13/ch13-13-8-sort-by-key-FnOnce", "ch13/ch13-13-10-iterators", "ch13/ch13-13-12-iterators-next-method", "ch13/ch13-13-15-consuming-adapters-iterator", "ch13/ch13-13-16-closure-with-filter-method", 
    "ch14/ch14_14_1_useful_documentation", "ch14/ch14_14_3_export_public_apis", "ch14/ch14_14_5_export_pub_use", 
    "ch15/ch15_15_1_box", "ch15/ch15_15_2_recursive_types_with_boxes", "ch15/ch15_15_7_dereference_operator", "ch15/ch15_15_8_own_smart_pointer", "ch15/ch15_15_11_box_deref_coercion", "ch15/ch15_15_11_box_derefMut_coercion", "ch15/ch15_15_14_box_drop_trait", "ch15/ch15_15_16_box_explicit_drop", "ch15/ch15_15_18_rc_pointer", "ch15/ch15_15_19_refcell_gpt_example", "ch15/ch15_15_20_refcell_example", "ch15/ch15_15_24_refcell_multiple_owners", "ch15/ch15_15_25_rust_memory_leak", 
    "ch16/ch16_16_1_new_thread", "ch16/ch16_16_2_join_handle", "ch16/ch16_16_3_use_main_thread_vec_in_thread", "ch16/ch16_16_6_message_passing_in_rust", 
]
